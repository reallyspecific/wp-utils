{
  "version": 3,
  "sources": ["../node_modules/tom-select/src/contrib/microevent.ts", "../node_modules/tom-select/src/contrib/microplugin.ts", "../node_modules/@orchidjs/unicode-variants/lib/regex.ts", "../node_modules/@orchidjs/unicode-variants/lib/strings.ts", "../node_modules/@orchidjs/unicode-variants/lib/index.ts", "../node_modules/@orchidjs/sifter/lib/utils.ts", "../node_modules/@orchidjs/sifter/dist/cjs/types.js", "../node_modules/@orchidjs/sifter/lib/sifter.ts", "../node_modules/tom-select/src/utils.ts", "../node_modules/tom-select/src/vanilla.ts", "../node_modules/tom-select/src/contrib/highlight.ts", "../node_modules/tom-select/src/constants.ts", "../node_modules/tom-select/src/defaults.ts", "../node_modules/tom-select/src/getSettings.ts", "../node_modules/tom-select/src/tom-select.ts", "../node_modules/tom-select/src/plugins/change_listener/plugin.ts", "../node_modules/tom-select/src/plugins/checkbox_options/plugin.ts", "../node_modules/tom-select/src/plugins/clear_button/plugin.ts", "../node_modules/tom-select/src/plugins/drag_drop/plugin.ts", "../node_modules/tom-select/src/plugins/dropdown_header/plugin.ts", "../node_modules/tom-select/src/plugins/caret_position/plugin.ts", "../node_modules/tom-select/src/plugins/dropdown_input/plugin.ts", "../node_modules/tom-select/src/plugins/input_autogrow/plugin.ts", "../node_modules/tom-select/src/plugins/no_backspace_delete/plugin.ts", "../node_modules/tom-select/src/plugins/no_active_items/plugin.ts", "../node_modules/tom-select/src/plugins/optgroup_columns/plugin.ts", "../node_modules/tom-select/src/plugins/remove_button/plugin.ts", "../node_modules/tom-select/src/plugins/restore_on_backspace/plugin.ts", "../node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts", "../node_modules/tom-select/src/tom-select.complete.ts", "admin-fields.js"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const arrayToPattern = (chars: string[]): string => {\n\n\tchars = chars.filter( Boolean );\n\n\tif( chars.length < 2 ){\n\t\treturn chars[0] || '';\n\t}\n\n\treturn (maxValueLength(chars) == 1) ? '['+chars.join('')+']' : '(?:'+chars.join('|')+')';\n};\n\nexport const sequencePattern = (array: string[]): string => {\n\n\tif( !hasDuplicates(array) ){\n\t\treturn array.join('');\n\t}\n\n\tlet pattern = '';\n\tlet prev_char_count = 0;\n\n\tconst prev_pattern = ()=>{\n\t\tif( prev_char_count > 1 ){\n\t\t\tpattern += '{'+prev_char_count+'}';\n\t\t}\n\t}\n\n\tarray.forEach((char,i)=>{\n\n\t\tif( char === array[i-1] ){\n\t\t\tprev_char_count++;\n\t\t\treturn;\n\t\t}\n\n\t\tprev_pattern();\n\n\t\tpattern += char;\n\t\tprev_char_count = 1;\n\t});\n\n\tprev_pattern();\n\n\treturn pattern;\n\n}\n\n\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const setToPattern = (chars: Set<string>): string => {\n\tlet array = Array.from(chars);\n\treturn arrayToPattern(array);\n}\n\n\n\n/**\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n */\nexport const hasDuplicates = (array: any[]) => {\n    return (new Set(array)).size !== array.length;\n}\n\n\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str: string): string => {\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n/**\n * Return the max length of array values\n */\nexport const maxValueLength = (array: string[]) => {\n\treturn array.reduce( (longest, value) => Math.max(longest,unicodeLength(value)),0);\n}\n\n\nexport const unicodeLength = (str: string) => {\n\treturn Array.from(str).length;\n}\n", "/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n */\nexport const allSubstrings = (input: string): string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    let result: string[][] = [];\n\n\tconst start = input.substring(1);\n    const suba = allSubstrings(start);\n\n\tsuba.forEach(function(subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n", "import { setToPattern, arrayToPattern, escape_regex, sequencePattern } from './regex.ts';\nimport { allSubstrings } from './strings.ts';\n\nexport type TUnicodeMap = {[key:string]:string};\nexport type TUnicodeSets = {[key:string]:Set<string>};\nexport type TCodePoints = [[number,number]];\nexport type TCodePointObj = {folded:string,composed:string,code_point:number}\nexport type TSequencePart = {start:number,end:number,length:number,substr:string}\n\nexport const code_points: TCodePoints = [[ 0, 65535 ]];\n\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\nexport let unicode_map: TUnicodeMap;\n\nlet multi_char_reg: RegExp;\n\nconst max_char_length = 3;\n\nconst latin_convert: TUnicodeMap = {}\n\nconst latin_condensed: TUnicodeMap = {\n\t'/': '\u2044\u2215',\n\t'0': '\u07C0',\n\t\"a\": \"\u2C65\u0250\u0251\",\n\t\"aa\": \"\uA733\",\n\t\"ae\": \"\u00E6\u01FD\u01E3\",\n\t\"ao\": \"\uA735\",\n\t\"au\": \"\uA737\",\n\t\"av\": \"\uA739\uA73B\",\n\t\"ay\": \"\uA73D\",\n\t\"b\": \"\u0180\u0253\u0183\",\n\t\"c\": \"\uA73F\u0188\u023C\u2184\",\n\t\"d\": \"\u0111\u0257\u0256\u1D05\u018C\uABB7\u0501\u0266\",\n\t\"e\": \"\u025B\u01DD\u1D07\u0247\",\n\t\"f\": \"\uA77C\u0192\",\n\t\"g\": \"\u01E5\u0260\uA7A1\u1D79\uA77F\u0262\",\n\t\"h\": \"\u0127\u2C68\u2C76\u0265\",\n\t\"i\": \"\u0268\u0131\",\n\t\"j\": \"\u0249\u0237\",\n\t\"k\": \"\u0199\u2C6A\uA741\uA743\uA745\uA7A3\",\n\t\"l\": \"\u0142\u019A\u026B\u2C61\uA749\uA747\uA781\u026D\",\n\t\"m\": \"\u0271\u026F\u03FB\",\n\t\"n\": \"\uA7A5\u019E\u0272\uA791\u1D0E\u043B\u0509\",\n\t\"o\": \"\u00F8\u01FF\u0254\u0275\uA74B\uA74D\u1D11\",\n\t\"oe\": \"\u0153\",\n\t\"oi\": \"\u01A3\",\n\t\"oo\": \"\uA74F\",\n\t\"ou\": \"\u0223\",\n\t\"p\": \"\u01A5\u1D7D\uA751\uA753\uA755\u03C1\",\n\t\"q\": \"\uA757\uA759\u024B\",\n\t\"r\": \"\u024D\u027D\uA75B\uA7A7\uA783\",\n\t\"s\": \"\u00DF\u023F\uA7A9\uA785\u0282\",\n\t\"t\": \"\u0167\u01AD\u0288\u2C66\uA787\",\n\t\"th\": \"\u00FE\",\n\t\"tz\": \"\uA729\",\n\t\"u\": \"\u0289\",\n\t\"v\": \"\u028B\uA75F\u028C\",\n\t\"vy\": \"\uA761\",\n\t\"w\": \"\u2C73\",\n\t\"y\": \"\u01B4\u024F\u1EFF\",\n\t\"z\": \"\u01B6\u0225\u0240\u2C6C\uA763\",\n\t\"hv\": \"\u0195\"\n}\n\n\nfor( let latin in latin_condensed ){\n\tlet unicode = latin_condensed[latin] || '';\n\tfor( let i = 0; i < unicode.length; i++){\n\t\tlet char\t= unicode.substring(i,i+1);\n\t\tlatin_convert[char] = latin;\n\t}\n}\n\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|')+'|'+accent_pat,'gu');\n\n\n\n/**\n * Initialize the unicode_map from the give code point ranges\n */\nexport const initialize = (_code_points?: TCodePoints) => {\n\tif( unicode_map !== undefined ) return;\n\tunicode_map = generateMap(_code_points || code_points );\n}\n\n\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nexport const normalize = (str: string, form: string = 'NFKD') => str.normalize(form);\n\n\n\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n */\nexport const asciifold = (str: string): string => {\n\n\treturn Array.from(str).reduce(\n\t\t/**\n\t\t * @param {string} result\n\t\t * @param {string} char\n\t\t */\n\t\t(result, char) =>{\n\t\t\treturn result + _asciifold(char)\n\t\t},\n\t\t''\n\t);\n};\n\nexport const _asciifold = (str: string): string => {\n\tstr = normalize(str)\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,(/** @type {string} */ char) => {\n\t\t\treturn latin_convert[char] || '';\n\t\t})\n\n\t//return str;\n\treturn normalize(str,'NFC')\n};\n\n/**\n * Generate a list of unicode variants from the list of code points\n */\nexport function* generator(code_points: TCodePoints): Generator<TCodePointObj> {\n\n\tfor(const [code_point_min, code_point_max] of code_points){\n\t\tfor(let i = code_point_min; i <= code_point_max; i++){\n\n\t\t\tlet composed\t\t= String.fromCharCode(i);\n\t\t\tlet folded\t\t\t= asciifold(composed);\n\n\n\t\t\tif( folded == composed.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when folded is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// folded \u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645 length 18 code point 65018\n\t\t\t// folded \u062C\u0644 \u062C\u0644\u0627\u0644\u0647 length 8 code point 65019\n\t\t\tif( folded.length > max_char_length ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( folded.length == 0 ){\n\t\t\t\tcontinue\n\t\t\t}\n\n\n\t\t\tyield {folded:folded,composed:composed,code_point:i};\n\t\t}\n\t}\n}\n\n\n/**\n * Generate a unicode map from the list of code points\n */\nexport const generateSets = (code_points: TCodePoints): TUnicodeSets => {\n\n\tconst unicode_sets: {[key: string]: Set<string>} = {};\n\n\tconst addMatching = (folded: string, to_add: string) => {\n\n\t\t/** @type {Set<string>} */\n\t\tconst folded_set = unicode_sets[folded] || new Set();\n\n\t\tconst patt = new RegExp( '^'+setToPattern(folded_set)+'$','iu');\n\t\tif( to_add.match(patt) ){\n\t\t\treturn;\n\t\t}\n\n\t\tfolded_set.add(escape_regex(to_add));\n\t\tunicode_sets[folded] = folded_set;\n\t}\n\n\n\tfor( let value of generator(code_points) ){\n\t\taddMatching(value.folded,value.folded);\n\t\taddMatching(value.folded,value.composed);\n\t}\n\n\treturn unicode_sets;\n}\n\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|\u00C6|\u01FC|\u01E2)|(?:A|\u24B6|\uFF21...)(?:E|\u025B|\u24BA...))\n */\nexport const generateMap = (code_points: TCodePoints): TUnicodeMap => {\n\tconst unicode_sets = generateSets(code_points);\n\n\tconst unicode_map: TUnicodeMap = {};\n\n\tlet multi_char: string[] = [];\n\n\tfor( let folded in unicode_sets ){\n\n\t\tlet set = unicode_sets[folded];\n\t\tif( set ){\n\t\t\tunicode_map[folded] = setToPattern(set);\n\t\t}\n\n\t\tif( folded.length > 1 ){\n\t\t\tmulti_char.push(escape_regex(folded));\n\t\t}\n\t}\n\n\tmulti_char.sort((a, b) => b.length - a.length );\n\tconst multi_char_patt = arrayToPattern(multi_char);\n\tmulti_char_reg = new RegExp('^'+multi_char_patt,'u');\n\n\treturn unicode_map;\n}\n\n\n/**\n * Map each element of an array from its folded value to all possible unicode matches\n */\nexport const mapSequence = (strings: string[], min_replacement: number = 1): string =>{\n\tlet chars_replaced = 0;\n\n\tstrings = strings.map((str)=>{\n\t\tif( unicode_map[str] ){\n\t\t\tchars_replaced += str.length;\n\t\t}\n\t\treturn unicode_map[str] || str;\n\t});\n\n\tif( chars_replaced >= min_replacement ){\n\t\treturn sequencePattern(strings);\n\t}\n\n\treturn '';\n}\n\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n */\nexport const substringsToPattern = (str: string, min_replacement: number = 1): string => {\n\n\tmin_replacement = Math.max(min_replacement,str.length-1);\n\n\treturn arrayToPattern(\n\t\tallSubstrings(str).map( (sub_pat) =>{\n\t\t\treturn mapSequence(sub_pat,min_replacement)\n\t\t})\n\t);\n}\n\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n */\nconst sequencesToPattern = (sequences: Sequence[], all: boolean = true) => {\n\n\tlet min_replacement = sequences.length > 1 ? 1 : 0;\n\treturn arrayToPattern(\n\t\tsequences.map( (sequence) =>{\n\t\t\tlet seq: string[] = [];\n\t\t\tconst len = all ? sequence.length() : sequence.length() - 1;\n\t\t\tfor( let j = 0; j < len; j++){\n\t\t\t\tseq.push(substringsToPattern(sequence.substrs[j]||'',min_replacement));\n\t\t\t}\n\n\t\t\treturn sequencePattern(seq);\n\t\t})\n\t);\n}\n\n/**\n * Return true if the sequence is already in the sequences\n */\nconst inSequences = (needle_seq: Sequence, sequences: Sequence[]) => {\n\n\tfor(const seq of sequences){\n\n\t\tif( seq.start != needle_seq.start || seq.end != needle_seq.end ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( seq.substrs.join('') !== needle_seq.substrs.join('') ){\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tlet needle_parts\t= needle_seq.parts;\n\n\t\tconst filter = (part: TSequencePart) =>{\n\n\t\t\tfor(const needle_part of needle_parts){\n\n\t\t\t\tif( needle_part.start === part.start && needle_part.substr === part.substr ){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif( part.length == 1 || needle_part.length == 1 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\n\t\t\t\t// check for overlapping parts\n\t\t\t\t// a = ['::=','==']\n\t\t\t\t// b = ['::','===']\n\t\t\t\t// a = ['r','sm']\n\t\t\t\t// b = ['rs','m']\n\t\t\t\tif( part.start < needle_part.start && part.end > needle_part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif( needle_part.start < part.start && needle_part.end > part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tlet filtered = seq.parts.filter(filter);\n\n\t\tif( filtered.length > 0 ){\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nclass Sequence{\n\tparts: TSequencePart[];\n\tsubstrs: string[];\n\tstart: number;\n\tend: number;\n\n\tconstructor(){\n\t\tthis.parts\t\t= [];\n\t\tthis.substrs\t= [];\n\t\tthis.start\t\t= 0;\n\t\tthis.end\t\t= 0;\n\t}\n\n\tadd(part: TSequencePart|undefined){\n\t\tif( part ){\n\t\t\tthis.parts.push(part);\n\t\t\tthis.substrs.push(part.substr);\n\t\t\tthis.start\t= Math.min(part.start,this.start);\n\t\t\tthis.end\t= Math.max(part.end,this.end);\n\t\t}\n\t}\n\n\tlast(){\n\t\treturn this.parts[this.parts.length-1];\n\t}\n\n\tlength(){\n\t\treturn this.parts.length;\n\t}\n\n\tclone(position: number, last_piece: TSequencePart){\n\t\tlet clone = new Sequence();\n\n\t\tlet parts = JSON.parse(JSON.stringify(this.parts));\n\t\tlet last_part = parts.pop();\n\t\tfor( const part of parts ){\n\t\t\tclone.add(part);\n\t\t}\n\n\t\tlet last_substr = last_piece.substr.substring(0,position-last_part.start);\n\t\tlet clone_last_len = last_substr.length;\n\t\tclone.add({start:last_part.start,end:last_part.start+clone_last_len,length:clone_last_len,substr:last_substr});\n\n\t\treturn clone;\n\t}\n\n}\n\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /a\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251A\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F/\n *\n * Issue:\n *  \uFE8A\uFE8B [ '\uFE8A = \\\\u{fe8a}', '\uFE8B = \\\\u{fe8b}' ]\n *\tbecomes:\t\u064A\u0654\u064A\u0654 [ '\u064A = \\\\u{64a}', '\u0654 = \\\\u{654}', '\u064A = \\\\u{64a}', '\u0654 = \\\\u{654}' ]\n *\n *\t\u0130\u0132 = IIJ = \u2161J\n *\n * \t1/2/4\n */\nexport const getPattern = (str: string): string | undefined => {\n\tinitialize();\n\n\tstr\t\t\t\t\t= asciifold(str);\n\n\tlet pattern\t\t\t= '';\n\tlet sequences\t\t= [new Sequence()];\n\n\tfor( let i = 0; i < str.length; i++ ){\n\n\t\tlet substr\t= str.substring(i);\n\t\tlet match\t= substr.match(multi_char_reg);\n\t\tconst char\t= str.substring(i,i+1);\n\t\tconst match_str = match ? match[0] : null;\n\n\n\t\t// loop through sequences\n\t\t// add either the char or multi_match\n\t\tlet overlapping: Sequence[]\t= [];\n\t\tlet added_types\t\t\t\t\t\t\t= new Set();\n\t\tfor(const sequence of sequences){\n\n\t\t\tconst last_piece\t= sequence.last();\n\n\n\t\t\tif( !last_piece || last_piece.length == 1 || last_piece.end <= i ){\n\n\t\t\t\t// if we have a multi match\n\t\t\t\tif( match_str ){\n\t\t\t\t\tconst len = match_str.length;\n\t\t\t\t\tsequence.add({start:i,end:i+len,length:len,substr:match_str});\n\t\t\t\t\tadded_types.add('1');\n\t\t\t\t}else{\n\t\t\t\t\tsequence.add({start:i,end:i+1,length:1,substr:char});\n\t\t\t\t\tadded_types.add('2');\n\t\t\t\t}\n\n\t\t\t}else if( match_str ){\n\n\t\t\t\tlet clone = sequence.clone(i,last_piece);\n\n\t\t\t\tconst len = match_str.length;\n\t\t\t\tclone.add({start:i,end:i+len,length:len,substr:match_str});\n\n\t\t\t\toverlapping.push(clone);\n\n\t\t\t}else{\n\t\t\t\t// don't add char\n\t\t\t\t// adding would create invalid patterns: 234 => [2,34,4]\n\t\t\t\tadded_types.add('3');\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if we have overlapping\n\t\tif( overlapping.length > 0 ){\n\n\t\t\t// ['ii','iii'] before ['i','i','iii']\n\t\t\toverlapping = overlapping.sort((a,b)=>{\n\t\t\t\treturn a.length() - b.length();\n\t\t\t});\n\n\t\t\tfor( let clone of overlapping){\n\n\t\t\t\t// don't add if we already have an equivalent sequence\n\t\t\t\tif( inSequences(clone, sequences) ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsequences.push(clone);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\n\t\t// if we haven't done anything unique\n\t\t// clean up the patterns\n\t\t// helps keep patterns smaller\n\t\t// if str = 'r\u20A8\u33A7aarss', pattern will be 446 instead of 655\n\t\tif( i > 0 && added_types.size == 1 && !added_types.has('3') ){\n\t\t\tpattern += sequencesToPattern(sequences,false);\n\t\t\tlet new_seq = new Sequence();\n\t\t\tconst old_seq = sequences[0];\n\t\t\tif( old_seq ){\n\t\t\t\tnew_seq.add(old_seq.last());\n\t\t\t}\n\t\t\tsequences = [new_seq];\n\t\t}\n\n\t}\n\n\tpattern += sequencesToPattern(sequences,true);\n\n\treturn pattern;\n}\n\n\nexport { escape_regex };\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "/**\n * sifter.js\n * Copyright (c) 2013\u20132020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nimport { scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp } from './utils.ts';\nimport { getPattern, escape_regex } from '@orchidjs/unicode-variants';\nimport * as T from './types.ts';\n\nclass Sifter{\n\n\tpublic items: any; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1]!;\n\t\t\t\tword\t= field_match[2]!;\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = getPattern(word) || null;\n\t\t\t\t}else{\n\t\t\t\t\tregex = escape_regex(word);\n\t\t\t\t}\n\t\t\t\tif( regex && respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {T.ScoreFn}\n\t */\n\tgetScoreFunction(query:string, options:T.UserOptions ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t/**\n\t * @returns {T.ScoreFn}\n\t *\n\t */\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0]!.field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]||1);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0]!, data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar score, sum = 0;\n\t\t\t\tfor( let token of tokens){\n\t\t\t\t\tscore = scoreObject(token, data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.UserOptions) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar implicit_score,\n\t\tsort_flds:T.Sort[]\t= [];\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort;\n\n\n\t\tif( typeof sort == 'function' ){\n\t\t\treturn sort.bind(this);\n\t\t}\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor( let s of sort ){\n\t\t\t\tif (search.query || s.field !== '$score') {\n\t\t\t\t\tsort_flds.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor( let fld of sort_flds ){\n\t\t\t\tif( fld.field === '$score' ){\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\n\t\t// without a search.query, all items will have the same score\n\t\t} else {\n\t\t\tsort_flds = sort_flds.filter((fld) => fld.field !== '$score' );\n\t\t}\n\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\tvar result, field;\n\t\t\tfor( let sort_fld of sort_flds ){\n\t\t\t\tfield = sort_fld.field;\n\n\t\t\t\tlet\tmultiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\n\t\t\t\tresult = multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t\tif (result) return result;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.UserOptions):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser) as T.Options;\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options as T.Options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.UserOptions) : T.PrepareObj {\n\t\tvar self = this, score, search: T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score:T.ScoreFn = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (_:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n\nexport { Sifter, scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp, getPattern }\nexport * from './types.ts';\n", "\nimport type TomSelect from './tom-select.ts';\nimport { TomLoadCallback } from './types/index.ts';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number): number | null => {\n\tif( timeout > 0 ){\n\t\treturn window.setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n", "\nimport { iterate } from './utils.ts';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla.ts';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "import defaults from './defaults.ts';\nimport { hash_key, iterate } from './utils.ts';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index.ts';\nimport { TomInput } from './types/index.ts';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent.ts';\nimport MicroPlugin from './contrib/microplugin.ts';\nimport { Sifter } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index.ts';\nimport {highlight, removeHighlight} from './contrib/highlight.ts';\nimport * as constants from './constants.ts';\nimport getSettings from './getSettings.ts';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend,\n\titerate\n} from './utils.ts';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla.ts';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|number = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input: string) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value: string) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\twindow.clearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { addEvent } from '../../utils.ts';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n", "/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { TomTemplate } from '../../types/index.ts';\nimport { preventDefault, hash_key } from '../../utils.ts';\nimport { getDom } from '../../vanilla.ts';\nimport { CBOptions } from './types.ts';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = ((data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t}) satisfies TomTemplate;\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { getDom } from '../../vanilla.ts';\nimport { CBOptions } from './types.ts';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { TomOption, TomItem } from '../../types/index.ts';\nimport { escape_html, preventDefault, addEvent } from '../../utils.ts';\nimport { getDom, setAttr } from '../../vanilla.ts';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { getDom } from '../../vanilla.ts';\nimport { preventDefault } from '../../utils.ts';\nimport { DHOptions } from './types.ts';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { nodeIndex, removeClasses } from '../../vanilla.ts';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport * as constants from '../../constants.ts';\nimport { getDom, addClasses } from '../../vanilla.ts';\nimport { addEvent, preventDefault } from '../../utils.ts';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { addEvent } from '../../utils.ts';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n", "/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport * as constants from '../../constants.ts';\nimport { parentMatch, nodeIndex } from '../../vanilla.ts';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { getDom } from '../../vanilla.ts';\nimport { escape_html, preventDefault, addEvent } from '../../utils.ts';\nimport { TomOption, TomItem } from '../../types/index.ts';\nimport { RBOptions } from './types.ts';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport type TomSelect from '../../tom-select.ts';\nimport { TomOption } from '../../types/index.ts';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport type TomSelect from '../../tom-select.ts';\nimport { TomOption } from '../../types/index.ts';\nimport { addClasses } from '../../vanilla.ts';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "import TomSelect from './tom-select.ts';\n\nimport change_listener from './plugins/change_listener/plugin.ts';\nimport checkbox_options from './plugins/checkbox_options/plugin.ts';\nimport clear_button from './plugins/clear_button/plugin.ts';\nimport drag_drop from './plugins/drag_drop/plugin.ts';\nimport dropdown_header from './plugins/dropdown_header/plugin.ts';\nimport caret_position from './plugins/caret_position/plugin.ts';\nimport dropdown_input from './plugins/dropdown_input/plugin.ts';\nimport input_autogrow from './plugins/input_autogrow/plugin.ts';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin.ts';\nimport no_active_items from './plugins/no_active_items/plugin.ts';\nimport optgroup_columns from './plugins/optgroup_columns/plugin.ts';\nimport remove_button from './plugins/remove_button/plugin.ts';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin.ts';\nimport virtual_scroll from './plugins/virtual_scroll/plugin.ts';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n", "( async function() {\n\n\tconst TomSelect = require( 'tom-select' );\n\n\tconst form = document.querySelector( '.rs-util-settings-form' );\n\tif ( ! form ) {\n\t\treturn;\n\t}\n\n\tconst onReady = async () => {\n\n\t\tconst settings = rsUtil_settingsPageENV();\n\n\t\tif ( settings.svg_iconset && ! document.querySelector( '#rs-util-svg-iconset' ) ) {\n\t\t\tconst svgIcons = document.createElement( 'div' );\n\t\t\ttry {\n\t\t\t\tconst svg = await fetch( settings.svg_iconset );\n\t\t\t\tconst svgText = await svg.text();\n\t\t\t\tsvgIcons.innerHTML = svgText;\n\t\t\t} catch ( e ) {\n\t\t\t\tconsole.error( e );\n\t\t\t}\n\t\t\tdocument.body.appendChild( svgIcons.firstElementChild );\n\t\t}\n\n\t\tdocument.querySelectorAll( '[data-use-tom-select]' ).forEach( el => {\n\t\t\tnew TomSelect( el );\n\t\t} );\n\n\t}\n\n\tif ( typeof rsUtil_settingsPageENV === 'function' ) {\n\t\tonReady();\n\t} else {\n\t\tdocument.addEventListener( 'rsUtil_settingsPageENV|ready', onReady );\n\t}\n\n\tfunction enableSaveButton() {\n\t\tdocument.querySelector( '.rs-util-settings-page .rs-util-settings-page__submit' ).disabled = false;\n\t}\n\n\tdocument.addEventListener( 'change', e => {\n\t\tif ( e.target.closest( '.rs-util-settings-form' ) ) {\n\t\t\tenableSaveButton();\n\t\t}\n\t} );\n\n\tdocument.addEventListener( 'click', e => {\n\t\tconst saveButton = e.target.closest( '[data-action=\"save-rs-util-page\"]' );\n\t\tif ( ! saveButton ) {\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\tform.classList.add('is-state-saving');\n\t\tform.submit();\n\t} );\n\n\tdocument.addEventListener( 'click', e => {\n\t\tconst tabToggle = e.target.closest( '.rs-util-settings-page__tab-toggle' );\n\t\tif ( ! tabToggle ) {\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\n\t\thistory.pushState( null, null, `#${tabToggle.dataset.section}` );\n\t\tswitchTab( tabToggle.dataset.section );\n\t} );\n\n\tconst switchTab = ( section ) => {\n\n\t\tif ( section === '' ) {\n\t\t\tconst firstSection = form.querySelector( `.rs-util-settings-section[data-section]` );\n\t\t\tsection = firstSection.dataset.section;\n\t\t}\n\n\t\tconst tabToggles = document.querySelectorAll( '.rs-util-settings-page__tab-toggle' );\n\t\ttabToggles.forEach( toggle => {\n\t\t\ttoggle.setAttribute( 'aria-expanded', toggle.dataset.section === section ? 'true' : 'false' );\n\t\t\tconst target = form.querySelector( `.rs-util-settings-section[data-section=\"${toggle.dataset.section}\"]` );\n\t\t\ttarget.setAttribute( 'aria-hidden', toggle.dataset.section === section ? 'false' : 'true' );\n\t\t} );\n\t}\n\n\tdocument.addEventListener( 'change', e => {\n\t\tconst toggle = e.target.closest( '[data-controls]' );\n\t\tif ( ! toggle ) {\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\n\t\tshowTogglableControls( toggle );\n\t} );\n\n\tconst showTogglableControls = ( toggle ) => {\n\t\tconst toggled = form.querySelectorAll( `[data-toggled-by=\"${toggle.id}\"]` );\n\t\ttoggled.forEach( fieldRow => {\n\t\t\tfieldRow.setAttribute( 'aria-hidden', ( toggle.checked ?? ( toggle.value || false ) ) ? 'false' : 'true' );\n\t\t} );\n\t\tif ( toggled.length ) {\n\t\t\ttoggle.setAttribute( 'aria-expanded', ( toggle.checked ?? ( toggle.value || false ) ) ? 'true' : 'false' );\n\t\t\ttoggle.setAttribute( 'aria-controls', `[data-toggled-by=\"${toggle.id}\"]` );\n\t\t\ttoggle.setAttribute( 'data-controls', `[data-toggled-by=\"${toggle.id}\"]` );\n\t\t}\n\t}\n\n\tconst allToggledBy = form.querySelectorAll( '[data-toggled-by]' );\n\tallToggledBy.forEach( toggleTarget => {\n\t\tconst toggle = form.querySelector( `#${toggleTarget.dataset.toggledBy}` );\n\t\tif ( ! toggle ) {\n\t\t\treturn;\n\t\t}\n\t\tshowTogglableControls( toggle );\n\t} );\n\n\tconst onPopState = () => {\n\t\tconst url = new URL( window.location.href );\n\t\tconst section = url.hash.replace( '#', '' );\n\t\tswitchTab( section );\n\t}\n\n\twindow.addEventListener( 'popstate', onPopState );\n\n\tonPopState();\n\n} )();"],
  "mappings": "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",
  "names": ["forEvents", "events", "callback", "event", "MicroEvent", "fct", "event_array", "n", "args", "self", "exports", "exports", "MicroPlugin", "Interface", "name", "fn", "plugins", "key", "self", "queue", "plugin", "arrayToPattern", "chars", "exports", "sequencePattern", "array", "pattern", "prev_char_count", "prev_pattern", "char", "i", "setToPattern", "hasDuplicates", "escape_regex", "str", "maxValueLength", "longest", "value", "unicodeLength", "allSubstrings", "input", "result", "start", "exports", "subresult", "tmp", "exports", "generator", "regex_ts_1", "strings_ts_1", "accent_pat", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "i", "char", "convert_pat", "initialize", "_code_points", "normalize", "str", "form", "asciifold", "result", "_asciifold", "code_points", "code_point_min", "code_point_max", "composed", "folded", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "value", "generateMap", "unicode_map", "multi_char", "set", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "inSequences", "needle_seq", "needle_parts", "filter", "part", "needle_part", "Sequence", "_Sequence", "position", "last_piece", "clone", "parts", "last_part", "last_substr", "clone_last_len", "getPattern", "pattern", "match", "match_str", "overlapping", "added_types", "new_seq", "old_seq", "unicode_variants_1", "getAttr", "obj", "name", "exports", "getAttrNesting", "part", "names", "scoreValue", "value", "token", "weight", "score", "pos", "propToArray", "key", "iterate", "object", "callback", "cmp", "a", "b", "require_types", "__commonJSMin", "exports", "utils_ts_1", "exports", "unicode_variants_1", "Sifter", "items", "settings", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "word", "field_match", "field", "regex", "options", "search", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "token", "data", "sum", "value", "weight", "score", "implicit_score", "sort_flds", "self", "sort", "get_field", "name", "result", "s", "fld", "a", "b", "sort_fld", "optsUser", "fn_score", "item", "id", "_", "fn_sort", "__exportStar", "hash_key", "value", "exports", "get_hash", "escape_html", "str", "timeout", "fn", "loadDebounce", "delay", "callback", "self", "debounce_events", "types", "type", "trigger", "event_args", "getSelection", "input", "preventDefault", "evt", "stop", "addEvent", "target", "options", "isKeyDown", "key_name", "count", "getId", "el", "id", "existing_id", "addSlashes", "append", "parent", "node", "iterate", "object", "key", "utils_ts_1", "getDom", "query", "exports", "tpl", "isHtmlString", "arg", "escapeQuery", "triggerEvent", "dom_el", "event_name", "event", "applyCSS", "css", "addClasses", "elmts", "classes", "norm_classes", "el", "cls", "removeClasses", "classesArray", "args", "_classes", "castAsArray", "parentMatch", "target", "selector", "wrapper", "getTail", "list", "direction", "isEmptyObject", "obj", "nodeIndex", "amongst", "i", "setAttr", "attrs", "val", "attr", "replaceNode", "existing", "replacement", "vanilla_ts_1", "highlight", "element", "regex", "highlightText", "node", "match", "spannode", "middlebit", "middleclone", "highlightChildren", "highlightRecursive", "exports", "removeHighlight", "el", "elements", "parent", "exports", "exports", "query", "exports", "getSettings", "defaults_ts_1", "utils_ts_1", "input", "settings_user", "settings", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "placeholder", "option", "settings_element", "init_select", "tagName", "options", "optionsMap", "group_count", "$order", "readData", "el", "data", "json", "addOption", "group", "value", "arr", "option_data", "addGroup", "optgroup", "id", "optgroup_data", "child", "init_textbox", "data_raw", "opt", "values", "microevent_ts_1", "microplugin_ts_1", "sifter_1", "unicode_variants_1", "highlight_ts_1", "constants", "getSettings_ts_1", "utils_ts_1", "vanilla_ts_1", "instance_i", "TomSelect", "input_arg", "user_settings", "dir", "input", "computedStyle", "settings", "filter", "value", "wrapper", "control", "dropdown", "dropdown_content", "classes", "inputMode", "control_input", "attrs", "attr", "self", "focus_node", "passive_event", "listboxId", "control_id", "query", "label", "label_click", "label_id", "classes_plugins", "e", "target_match", "evt", "option", "doc_mousedown", "target", "win_scroll", "options", "optgroups", "optgroup", "field_label", "field_optgroup", "templates", "data", "escape", "key", "fn", "callbacks", "get_settings", "pastedText", "splitInput", "piece", "character", "next", "prev", "wasFocused", "deactivate", "item", "callback", "classList", "changed", "silent", "events", "eventName", "i", "begin", "end", "swap", "last", "last_active", "idx", "scroll", "behavior", "content", "height_menu", "scrollTop", "height_item", "y", "activeItems", "sort", "result", "calculateScore", "hashed", "triggerDropdown", "j", "k", "n", "html", "has_create_option", "active_group", "create", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "getGroupFragment", "order", "group_order_i", "order_group", "group_fragment", "opt_value", "opt_hash", "option_el", "self_optgroup", "a", "b", "group_order", "group_heading", "group_options", "header", "group_html", "tok", "add_template", "template", "active_index", "user_created", "dat", "id", "hashed_id", "item_new", "index_item", "value_old", "value_new", "data_old", "option_new", "boundFilter", "selected", "direction", "type", "all", "values", "items", "x", "last_item", "wasFull", "caret", "output", "created", "isFull", "isLocked", "wrap_classList", "opts", "empty_option", "AddSelected", "has_selected", "reuse_opt", "setTextboxValue", "trigger", "context", "rect", "top", "left", "el", "selection", "tail", "rm_items", "rm_item", "adjacent", "new_pos", "lock", "disabled", "isReadOnly", "revertSettings", "templateName", "when", "method", "new_fn", "orig_method", "result_new", "exports", "exports", "default_1", "utils_ts_1", "exports", "default_1", "utils_ts_1", "vanilla_ts_1", "userOptions", "self", "orig_onOptionSelect", "cbOptions", "UpdateChecked", "checkbox", "toCheck", "UpdateCheckbox", "option", "orig_render_option", "data", "escape_html", "rendered", "evt", "hashed", "value", "exports", "default_1", "vanilla_ts_1", "userOptions", "self", "options", "data", "button", "evt", "exports", "default_1", "utils_ts_1", "vanilla_ts_1", "insertAfter", "referenceNode", "newNode", "_a", "insertBefore", "isBefore", "self", "orig_lock", "orig_unlock", "sortable", "drag_item", "orig_render_item", "data", "escape", "item", "mousedown", "evt", "dragStart", "dragOver", "moveitem", "dragLeave", "targetitem", "dragitem", "dragend", "el", "values", "value", "exports", "default_1", "vanilla_ts_1", "utils_ts_1", "userOptions", "self", "options", "data", "header", "close_link", "evt", "exports", "default_1", "vanilla_ts_1", "self", "new_pos", "child", "j", "direction", "last_active", "idx", "exports", "default_1", "constants", "vanilla_ts_1", "utils_ts_1", "self", "div", "placeholder", "evt", "orig_onBlur", "exports", "default_1", "utils_ts_1", "self", "test_input", "control", "transfer_styles", "style_name", "resize", "exports", "default_1", "self", "orig_deleteSelection", "evt", "exports", "default_1", "exports", "default_1", "constants", "vanilla_ts_1", "self", "orig_keydown", "evt", "index", "option", "options", "optgroup", "exports", "default_1", "vanilla_ts_1", "utils_ts_1", "userOptions", "options", "self", "html", "orig_render_item", "data", "escape", "item", "close_button", "evt", "exports", "default_1", "userOptions", "self", "options", "option", "value", "exports", "default_1", "vanilla_ts_1", "self", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "dropdown_content", "loading_more", "load_more_opt", "default_values", "selectable", "index", "canLoadMore", "query", "clearFilter", "option", "value", "next_url", "options", "optgroups", "first_option", "tom_select_ts_1", "plugin_ts_1", "plugin_ts_2", "plugin_ts_3", "plugin_ts_4", "plugin_ts_5", "plugin_ts_6", "plugin_ts_7", "plugin_ts_8", "plugin_ts_9", "plugin_ts_10", "plugin_ts_11", "plugin_ts_12", "plugin_ts_13", "plugin_ts_14", "exports", "TomSelect", "form", "onReady", "settings", "svgIcons", "svgText", "e", "el", "enableSaveButton", "tabToggle", "switchTab", "section", "toggle", "showTogglableControls", "toggled", "fieldRow", "toggleTarget", "onPopState"]
}
